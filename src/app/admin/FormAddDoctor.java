/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app.admin;

import app.MainGUI;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import lib.*;

/**
 *
 * @author ashda
 */
public class FormAddDoctor extends javax.swing.JFrame{

    JCheckBox[] daysOfWeekBoxes;
    
    DoctorFactory factory = new HISDoctorFactory();
    
    
    ArrayList <Account>  accounts;
    ArrayList <Doctor>   doct;
    ArrayList <Schedule> schedules = new ArrayList <Schedule>();

    
    Doctor d;
    Schedule s;
    Cardiologist cardio;
    Gastroenterologist gastro;
    
    int day;
    int numOfRows;
    String spec;
    
    int fHour;
    int fMin;
    int tHour;
    int tMin;

    
    /**
     * Creates new form AddDoctorForm
     */
    public FormAddDoctor() {
        initComponents();
       
        daysOfWeekBoxes = new JCheckBox[] {
            dMonday,   dTuesday, dWednesday, 
            dThursday, dFriday,  dSaturday,  dSunday,  
        };
        
//        specialization.addItem(cardio.getSpecialization());
//        specialization.addItem(gastro.getSpecialization());
    }
    
    public void setDoctors(ArrayList<Doctor> doctors) {
        this.doct = doctors;
    }
    
    public void setAccounts(ArrayList<Account> accounts) {
        this.accounts = accounts;
    }
   

    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel2 = new java.awt.Panel();
        panel3 = new java.awt.Panel();
        inpFirstName = new javax.swing.JTextField();
        labSched = new javax.swing.JLabel();
        labFirstName1 = new javax.swing.JLabel();
        inpLastName = new javax.swing.JTextField();
        FromHour = new javax.swing.JSpinner();
        FromMinute = new javax.swing.JSpinner();
        labLastName1 = new javax.swing.JLabel();
        labSched1 = new javax.swing.JLabel();
        labSched2 = new javax.swing.JLabel();
        labSched3 = new javax.swing.JLabel();
        labSched4 = new javax.swing.JLabel();
        labSched5 = new javax.swing.JLabel();
        labSched6 = new javax.swing.JLabel();
        labSched7 = new javax.swing.JLabel();
        labSched8 = new javax.swing.JLabel();
        labSched9 = new javax.swing.JLabel();
        ToHour = new javax.swing.JSpinner();
        labSched10 = new javax.swing.JLabel();
        ToMinute = new javax.swing.JSpinner();
        labSpecialization = new javax.swing.JLabel();
        Doctor = new javax.swing.JButton();
        labLastName2 = new javax.swing.JLabel();
        labLastName3 = new javax.swing.JLabel();
        labLastName4 = new javax.swing.JLabel();
        dMonday = new javax.swing.JCheckBox();
        dTuesday = new javax.swing.JCheckBox();
        dWednesday = new javax.swing.JCheckBox();
        dThursday = new javax.swing.JCheckBox();
        dFriday = new javax.swing.JCheckBox();
        dSaturday = new javax.swing.JCheckBox();
        dSunday = new javax.swing.JCheckBox();
        labFirstName2 = new javax.swing.JLabel();
        inpUserName = new javax.swing.JTextField();
        labLastName5 = new javax.swing.JLabel();
        labLastName6 = new javax.swing.JLabel();
        inpPassword = new javax.swing.JPasswordField();
        bSpecialization = new javax.swing.JComboBox<>();
        labLastName7 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        consultationRateSpinner = new javax.swing.JSpinner();

        setBackground(new java.awt.Color(255, 255, 255));

        panel2.setBackground(new java.awt.Color(0, 51, 153));
        panel2.setForeground(new java.awt.Color(51, 51, 51));

        javax.swing.GroupLayout panel2Layout = new javax.swing.GroupLayout(panel2);
        panel2.setLayout(panel2Layout);
        panel2Layout.setHorizontalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panel2Layout.setVerticalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 138, Short.MAX_VALUE)
        );

        panel3.setBackground(new java.awt.Color(255, 255, 255));
        panel3.setForeground(new java.awt.Color(255, 255, 255));

        labSched.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        labSched.setText("Schedule:");

        labFirstName1.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        labFirstName1.setText("First Name:");

        FromHour.setModel(new javax.swing.SpinnerNumberModel(0, 0, 23, 1));

        FromMinute.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));

        labLastName1.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        labLastName1.setText("Last Name:");

        labSched1.setFont(new java.awt.Font("Yu Gothic", 1, 18)); // NOI18N
        labSched1.setText(":\n");

        labSched2.setFont(new java.awt.Font("Yu Gothic", 1, 18)); // NOI18N
        labSched2.setText("M");

        labSched3.setFont(new java.awt.Font("Yu Gothic", 1, 18)); // NOI18N
        labSched3.setText("T");

        labSched4.setFont(new java.awt.Font("Yu Gothic", 1, 18)); // NOI18N
        labSched4.setText("W");

        labSched5.setFont(new java.awt.Font("Yu Gothic", 1, 18)); // NOI18N
        labSched5.setText("Th");

        labSched6.setFont(new java.awt.Font("Yu Gothic", 1, 18)); // NOI18N
        labSched6.setText("F");

        labSched7.setFont(new java.awt.Font("Yu Gothic", 1, 18)); // NOI18N
        labSched7.setText("Sa");

        labSched8.setFont(new java.awt.Font("Yu Gothic", 1, 18)); // NOI18N
        labSched8.setText("Su");

        labSched9.setFont(new java.awt.Font("Yu Gothic", 1, 18)); // NOI18N
        labSched9.setText("-");

        ToHour.setModel(new javax.swing.SpinnerNumberModel(0, 0, 23, 1));

        labSched10.setFont(new java.awt.Font("Yu Gothic", 1, 18)); // NOI18N
        labSched10.setText(":\n");

        ToMinute.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));

        labSpecialization.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        labSpecialization.setText("Specialization:");

        Doctor.setBackground(new java.awt.Color(255, 255, 255));
        Doctor.setFont(new java.awt.Font("Yu Gothic Medium", 1, 13)); // NOI18N
        Doctor.setText("Accept");
        Doctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DoctorActionPerformed(evt);
            }
        });

        labLastName2.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        labLastName2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labLastName2.setText("[ Day ]");

        labLastName3.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        labLastName3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labLastName3.setText("[ Time (24-Hour Format) ]");

        labLastName4.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        labLastName4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labLastName4.setText("[ Doctor Name ]");

        dMonday.setBackground(new java.awt.Color(255, 255, 255));

        dTuesday.setBackground(new java.awt.Color(255, 255, 255));

        dWednesday.setBackground(new java.awt.Color(255, 255, 255));

        dThursday.setBackground(new java.awt.Color(255, 255, 255));

        dFriday.setBackground(new java.awt.Color(255, 255, 255));

        dSaturday.setBackground(new java.awt.Color(255, 255, 255));

        dSunday.setBackground(new java.awt.Color(255, 255, 255));

        labFirstName2.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        labFirstName2.setText("User Name:");

        inpUserName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inpUserNameActionPerformed(evt);
            }
        });

        labLastName5.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        labLastName5.setText("Password");

        labLastName6.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        labLastName6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labLastName6.setText("[ Doctor Log-in Info ]");

        bSpecialization.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 13)); // NOI18N
        bSpecialization.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Gastroenterology", "Cardiology", "General Dentistry", "General Practice", "Gynecology", "Hematology", "Internal Medicine", "Nephrology", "Neurology", "Ophthalmology", "Orthopedia Surgery", "Pediatrics", "Psychology", "Urology" }));

        labLastName7.setFont(new java.awt.Font("Yu Gothic", 1, 14)); // NOI18N
        labLastName7.setText("Consultation Rate");

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 14)); // NOI18N
        jLabel3.setText("PHP");

        consultationRateSpinner.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 14)); // NOI18N
        consultationRateSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        javax.swing.GroupLayout panel3Layout = new javax.swing.GroupLayout(panel3);
        panel3.setLayout(panel3Layout);
        panel3Layout.setHorizontalGroup(
            panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel3Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel3Layout.createSequentialGroup()
                        .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel3Layout.createSequentialGroup()
                                .addComponent(labLastName7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(consultationRateSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panel3Layout.createSequentialGroup()
                                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(labLastName1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(labFirstName1, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(inpFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(inpLastName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panel3Layout.createSequentialGroup()
                                        .addComponent(labLastName5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(inpPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(panel3Layout.createSequentialGroup()
                                        .addComponent(labFirstName2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(inpUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(labLastName2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())
                            .addGroup(panel3Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(labLastName6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(28, 28, 28))))
                    .addGroup(panel3Layout.createSequentialGroup()
                        .addComponent(labLastName4, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(panel3Layout.createSequentialGroup()
                        .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panel3Layout.createSequentialGroup()
                                .addComponent(labSpecialization)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bSpecialization, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(panel3Layout.createSequentialGroup()
                                .addComponent(labSched)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(FromHour, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)
                                .addComponent(labSched1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(FromMinute, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labSched9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ToHour, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labSched10)
                                .addGap(7, 7, 7)
                                .addComponent(ToMinute, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(labLastName3, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labSched2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dMonday)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labSched3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dTuesday)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labSched4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dWednesday)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labSched5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dThursday)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labSched6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dFriday)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labSched7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dSaturday)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labSched8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dSunday)
                        .addGap(30, 30, 30))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Doctor)
                .addGap(277, 277, 277))
        );

        panel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {labFirstName2, labLastName5});

        panel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {labSched, labSpecialization});

        panel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {inpPassword, inpUserName});

        panel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {labFirstName1, labLastName1, labLastName7});

        panel3Layout.setVerticalGroup(
            panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel3Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labLastName4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labLastName6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(inpFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labFirstName2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inpUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labFirstName1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(labLastName1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inpLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labLastName5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inpPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labLastName7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(consultationRateSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(labLastName2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labLastName3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(ToMinute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labSched10, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ToHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labSched9, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FromMinute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labSched1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FromHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labSched, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labSched2)
                        .addComponent(dMonday, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labSched3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dTuesday, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labSched4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dWednesday, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labSched5)
                        .addComponent(dThursday, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dFriday, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labSched6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labSched7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dSaturday, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labSched8, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dSunday, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel3Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(bSpecialization, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labSpecialization, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Doctor)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private static void writeDoctorsToCSV(ArrayList<Doctor> doctors) 
    {
        File outputCSV = new File("csvtest.csv");
    
        try (PrintWriter writer = new PrintWriter(outputCSV)) 
        {
            for(Doctor d : doctors) 
            {
                /**
                 * TODO: This 0, or 1, means that it's either a DOCTOR or a SCHEDULE
                 *       respectively, useful for when it comes to reading the file 
                 *       (see readDoctorsFromCSV) though I'm not sure if this is 
                 *       the best solution
                **/      
                writer.println("0," + 
                               d.getFirstName() + "," + 
                               d.getLastName()  + "," +
                               d.getConsultationRate()      + "," + 
                               d.getSpecialization());
                
                for(Schedule sched : d.getSchedules())
                {
                    writer.println("1," + sched.getDay() + "," +
                                    sched.getTimeFrom().getHourString()   + ":" +
                                    sched.getTimeFrom().getMinuteString() + "," +
                                    sched.getTimeTo().getHourString()     + ":" +
                                    sched.getTimeTo().getMinuteString());
                }
            }
            
            System.out.println("Finished writing to " + outputCSV.getName());
        } catch(FileNotFoundException e) 
        {
            System.err.println("Error: File not found " + e.getMessage());
        }
    }
    
    private boolean validateInput() {
        
        boolean isValidFirstName = !inpFirstName.getText().isEmpty();
        boolean isValidLastName  = !inpFirstName.getText().isEmpty();
        boolean isValidUserName  = !inpUserName.getText().isEmpty();
        boolean isValidPassword  = !Arrays.toString(inpPassword.getPassword()).isEmpty();
        
        for(char ch : inpFirstName.getText().toCharArray())
        {
            if(Character.isDigit(ch))
            {
                isValidFirstName = false;
                break;
            }
        }
        
        for(char ch : inpFirstName.getText().toCharArray())
        {
            if(Character.isDigit(ch))
            {
                isValidLastName = false;
                break;
            }
        }
        
        int selectedBoxes = 0;
        for(int i = 0; i < daysOfWeekBoxes.length; ++i)
        {
            if(daysOfWeekBoxes[i].isSelected())
                selectedBoxes++;
        }
        
        boolean isValidTime = true;
        TimePoint timeFrom  = new TimePoint(Integer.parseInt(FromHour.getValue().toString()), 
                                            Integer.parseInt(FromMinute.getValue().toString()));
        TimePoint timeTo    = new TimePoint(Integer.parseInt(ToHour.getValue().toString()), 
                                            Integer.parseInt(ToMinute.getValue().toString()));
        
        // If the time from is set later than time to
        if((timeFrom.inMinutes() - timeTo.inMinutes()) >= 0)
            isValidTime = false;
        
        boolean isValidRate = (Integer.parseInt(consultationRateSpinner.getValue().toString()) != 0);
        
        return isValidFirstName && isValidLastName && (selectedBoxes != 0) &&
               isValidUserName  && isValidPassword && isValidTime && isValidRate;
    }
    
    private void DoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DoctorActionPerformed
        if(validateInput()) {
            String firstName      = inpFirstName.getText();
            String lastName       = inpLastName.getText();
            String specialization = bSpecialization.getSelectedItem().toString();
            boolean isUniqueDoctor = true;
            
            for(Doctor d : doct) {
                String inputName = firstName + " " + lastName;
                if(inputName.equals(d.getFirstName() + " " + d.getLastName()) &&
                   specialization.equals(d.getSpecialization()))
                {
                    isUniqueDoctor = false;
                    break;
                }
            }
            
            if(!isUniqueDoctor)
            {
                JOptionPane.showMessageDialog(null, "Error: Doctor's information already exists in the database");
            } else{

                TimePoint timeFrom    = new TimePoint(Integer.parseInt(FromHour.getValue().toString()), 
                                                      Integer.parseInt(FromMinute.getValue().toString()));
                TimePoint timeTo      = new TimePoint(Integer.parseInt(ToHour.getValue().toString()), 
                                                      Integer.parseInt(ToMinute.getValue().toString()));
                schedules.clear();
                for(int i = 0; i < daysOfWeekBoxes.length; ++i) {
                    if(daysOfWeekBoxes[i].isSelected())
                        schedules.add(new Schedule(i, timeFrom, timeTo));
                }

                Doctor newDoct = factory.createDoctor(specialization, firstName, lastName, schedules);

                newDoct.setConsultationRate(Double.parseDouble(consultationRateSpinner.getValue().toString()));

                doct.add(newDoct);
                writeDoctorsToCSV(doct);

                // Create the doctor login account
                String userName   = inpUserName.getText();
                String password   = new String(inpPassword.getPassword());

                Account newAcc    = new Account(newDoct.getFirstName() + " " + newDoct.getLastName(), 
                                                userName, password, Account.DOCTOR);

                accounts.add(newAcc);
                MainGUI.writeAccountsToCSV(accounts, "accounts.csv");

                JOptionPane.showMessageDialog(null, "Successfully Added new doctor");
            }
        } else
            JOptionPane.showMessageDialog(null, "Error: please recheck your input");
    }//GEN-LAST:event_DoctorActionPerformed

    private void inpUserNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inpUserNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inpUserNameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormAddDoctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormAddDoctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormAddDoctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormAddDoctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormAddDoctor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Doctor;
    private javax.swing.JSpinner FromHour;
    private javax.swing.JSpinner FromMinute;
    private javax.swing.JSpinner ToHour;
    private javax.swing.JSpinner ToMinute;
    private javax.swing.JComboBox<String> bSpecialization;
    private javax.swing.JSpinner consultationRateSpinner;
    private javax.swing.JCheckBox dFriday;
    private javax.swing.JCheckBox dMonday;
    private javax.swing.JCheckBox dSaturday;
    private javax.swing.JCheckBox dSunday;
    private javax.swing.JCheckBox dThursday;
    private javax.swing.JCheckBox dTuesday;
    private javax.swing.JCheckBox dWednesday;
    private javax.swing.JTextField inpFirstName;
    private javax.swing.JTextField inpLastName;
    private javax.swing.JPasswordField inpPassword;
    private javax.swing.JTextField inpUserName;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel labFirstName1;
    private javax.swing.JLabel labFirstName2;
    private javax.swing.JLabel labLastName1;
    private javax.swing.JLabel labLastName2;
    private javax.swing.JLabel labLastName3;
    private javax.swing.JLabel labLastName4;
    private javax.swing.JLabel labLastName5;
    private javax.swing.JLabel labLastName6;
    private javax.swing.JLabel labLastName7;
    private javax.swing.JLabel labSched;
    private javax.swing.JLabel labSched1;
    private javax.swing.JLabel labSched10;
    private javax.swing.JLabel labSched2;
    private javax.swing.JLabel labSched3;
    private javax.swing.JLabel labSched4;
    private javax.swing.JLabel labSched5;
    private javax.swing.JLabel labSched6;
    private javax.swing.JLabel labSched7;
    private javax.swing.JLabel labSched8;
    private javax.swing.JLabel labSched9;
    private javax.swing.JLabel labSpecialization;
    private java.awt.Panel panel2;
    private java.awt.Panel panel3;
    // End of variables declaration//GEN-END:variables
}
